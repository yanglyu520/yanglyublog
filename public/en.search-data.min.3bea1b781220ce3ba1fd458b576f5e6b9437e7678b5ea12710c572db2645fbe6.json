[{"id":0,"href":"/docs/leetcode/","title":"Leetcode","section":"Docs","content":" Introduction # Ferre hinnitibus erat accipitrem dixi Troiae tollens # Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\nPedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret Est simul fameque tauri qua ad # Locum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol # Nec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo; Trepident sitimque # Sentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"},{"id":1,"href":"/docs/cs/","title":"CS Basics","section":"Docs","content":" Introduction # Ferre hinnitibus erat accipitrem dixi Troiae tollens # Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\nPedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret Est simul fameque tauri qua ad # Locum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol # Nec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo; Trepident sitimque # Sentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"},{"id":2,"href":"/docs/golang/","title":"Golang","section":"Docs","content":" Introduction # Ferre hinnitibus erat accipitrem dixi Troiae tollens # Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\nPedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret Est simul fameque tauri qua ad # Locum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol # Nec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo; Trepident sitimque # Sentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"},{"id":3,"href":"/docs/howtos/","title":"HowTos","section":"Docs","content":" Introduction # Ferre hinnitibus erat accipitrem dixi Troiae tollens # Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\nPedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret Est simul fameque tauri qua ad # Locum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol # Nec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo; Trepident sitimque # Sentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"},{"id":4,"href":"/docs/leetcode/contents/hashmap/242validanagram/","title":"Leetcode 242 Valid Anagram","section":"Hashmap","content":" Solving LeetCode: Valid Anagram # In this post, we will discuss how to solve the popular LeetCode problem: \u0026ldquo;Valid Anagram\u0026rdquo;. This problem requires us to determine if two given strings are anagrams of each other. Two strings are anagrams if they contain the same characters with the same frequencies.\nProblem Statement # Given two strings s and t, write a function isAnagram(s string, t string) bool that returns true if t is an anagram of s, and false otherwise.\nApproach to Solve the Problem # We can use a hashmap to count the number of each smallcase letter frequency, and then compare with the second string\nnote: it is all smallercase note: use an array slice to count frequency An illustration might help to explain this better, refer to\nImplementation in Go # Here\u0026rsquo;s the implementation of the above approach in Go:\nfunc isAnagram(s string, t string) bool { m := [26]int{} for _, v := range s { m[v-\u0026#39;a\u0026#39;]++ } for _, v := range t { m[v-\u0026#39;a\u0026#39;]-- } for _, v := range m { if v != 0 { return false } } return true } Explanation of the Code # Initialization: We initialize an array m of size 26 to zero. Each index in this array corresponds to a letter in the alphabet (\u0026lsquo;a\u0026rsquo; to \u0026lsquo;z\u0026rsquo;).\nCounting Characters in s: We iterate over each character v in the string s, calculate its position in the alphabet using v-'a', and increment the corresponding index in the array m.\nCounting Characters in t: Similarly, we iterate over each character v in the string t, calculate its position in the alphabet, and decrement the corresponding index in the array m.\nValidation: Finally, we check if all values in the array m are zero. If any value is not zero, it means the strings have different character frequencies and are not anagrams.\nConclusion # By using a frequency counter array, we efficiently determine if two strings are anagrams in linear time, O(n), where n is the length of the strings. This approach ensures that we check character frequencies in a simple and effective manner.\nHappy coding!\n"},{"id":5,"href":"/docs/cs/content/","title":"Content","section":"CS Basics","content":" Ubi loqui # Mentem genus facietque salire tempus bracchia # Lorem markdownum partu paterno Achillem. Habent amne generosi aderant ad pellem nec erat sustinet merces columque haec et, dixit minus nutrit accipiam subibis subdidit. Temeraria servatum agros qui sed fulva facta. Primum ultima, dedit, suo quisque linguae medentes fixo: tum petis.\nRapit vocant si hunc siste adspice # Ora precari Patraeque Neptunia, dixit Danae Cithaeron armaque maxima in nati Coniugis templis fluidove. Effugit usus nec ingreditur agmen ac manus conlato. Nullis vagis nequiquam vultibus aliquos altera suum venis teneas fretum. Armos remotis hoc sine ferrea iuncta quam!\nLocus fuit caecis # Nefas discordemque domino montes numen tum humili nexilibusque exit, Iove. Quae miror esse, scelerisque Melaneus viribus. Miseri laurus. Hoc est proposita me ante aliquid, aura inponere candidioribus quidque accendit bella, sumpta. Intravit quam erat figentem hunc, motus de fontes parvo tempestate.\niscsi_virus = pitch(json_in_on(eupViral), northbridge_services_troubleshooting, personal( firmware_rw.trash_rw_crm.device(interactive_gopher_personal, software, -1), megabit, ergonomicsSoftware(cmyk_usb_panel, mips_whitelist_duplex, cpa))); if (5) { managementNetwork += dma - boolean; kilohertz_token = 2; honeypot_affiliate_ergonomics = fiber; } mouseNorthbridge = byte(nybble_xmp_modem.horse_subnet( analogThroughputService * graphicPoint, drop(daw_bit, dnsIntranet), gateway_ospf), repository.domain_key.mouse(serverData(fileNetwork, trim_duplex_file), cellTapeDirect, token_tooltip_mashup( ripcordingMashup))); module_it = honeypot_driver(client_cold_dvr(593902, ripping_frequency) + coreLog.joystick(componentUdpLink), windows_expansion_touchscreen); bashGigabit.external.reality(2, server_hardware_codec.flops.ebookSampling( ciscNavigationBacklink, table + cleanDriver), indexProtocolIsp); Placabilis coactis nega ingemuit ignoscat nimia non # Frontis turba. Oculi gravis est Delphice; inque praedaque sanguine manu non.\nif (ad_api) { zif += usb.tiffAvatarRate(subnet, digital_rt) + exploitDrive; gigaflops(2 - bluetooth, edi_asp_memory.gopher(queryCursor, laptop), panel_point_firmware); spyware_bash.statePopApplet = express_netbios_digital( insertion_troubleshooting.brouter(recordFolderUs), 65); } recursionCoreRay = -5; if (hub == non) { portBoxVirus = soundWeb(recursive_card(rwTechnologyLeopard), font_radcab, guidCmsScalable + reciprocalMatrixPim); left.bug = screenshot; } else { tooltipOpacity = raw_process_permalink(webcamFontUser, -1); executable_router += tape; } if (tft) { bandwidthWeb *= social_page; } else { regular += 611883; thumbnail /= system_lag_keyboard; } Caesorum illa tu sentit micat vestes papyriferi # Inde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"},{"id":6,"href":"/docs/cs/content/t2/","title":"What Happens When You Put a URL in Your Browser?","section":"Content","content":" What Happens When You Put a URL in Your Browser? # Understanding what happens when you type a URL into your browser and hit enter is essential for grasping the basics of web technology. Here’s a detailed step-by-step breakdown of the process.\n1. URL Entry and Parsing # Input and Validation: When you enter a URL in the address bar, the browser first validates the URL to ensure it\u0026rsquo;s properly formatted. Protocol Identification: The browser identifies the protocol (e.g., HTTP, HTTPS) to determine how to communicate with the server. Domain Extraction: The browser extracts the domain name (e.g., www.example.com) from the URL. Path and Query Parsing: It also parses the path (e.g., /index.html) and any query parameters (e.g., ?id=123) in the URL. 2. DNS Resolution # Cache Check: The browser checks its cache for a recently resolved IP address for the domain. Operating System Cache: If not found, the browser queries the OS for the IP address. Recursive Querying: If the OS cache is empty, a DNS recursive query is sent to resolve the domain name into an IP address. DNS Server Interaction: The query goes to a DNS resolver, which might contact multiple DNS servers to find the authoritative DNS server for the domain. Response Handling: The DNS resolver eventually returns the IP address to the browser. 3. Establishing a Connection # TCP Handshake: The browser initiates a TCP connection with the server using a three-way handshake (SYN, SYN-ACK, ACK). Secure Connection (HTTPS): For HTTPS, a TLS handshake is performed to establish an encrypted connection. Certificate Verification: The server’s SSL certificate is verified to ensure it’s trusted and matches the domain. Key Exchange: Secure keys are exchanged to encrypt the communication between the browser and the server. 4. Sending an HTTP Request # Request Preparation: The browser prepares an HTTP request, specifying the method (GET, POST, etc.), URL path, headers, and possibly a body. Headers Inclusion: Headers include information like the User-Agent, Accept, and possibly cookies. Request Sending: The HTTP request is sent over the established connection to the server. Waiting for Response: The browser waits for the server’s response after sending the request. 5. Server Processing # Request Handling: The server receives and parses the HTTP request. Resource Fetching: The server determines the requested resource, which might involve fetching a static file, executing a script, or querying a database. Dynamic Content: For dynamic content, the server runs server-side code to generate the response. Response Preparation: The server prepares an HTTP response, including status codes, headers, and the response body. 6. Sending an HTTP Response # Response Transmission: The server sends the HTTP response back to the browser. Status Code Interpretation: The response includes a status code (e.g., 200 OK, 404 Not Found) indicating the result of the request. Headers and Caching: Headers provide metadata and caching instructions for the browser. Response Body: The body of the response contains the actual content, such as HTML, CSS, JavaScript, or JSON data. 7. Rendering the Content # HTML Parsing: The browser parses the HTML to build the Document Object Model (DOM). CSS Application: The browser applies CSS styles to the DOM to determine the layout and appearance. JavaScript Execution: JavaScript is executed to add interactivity and modify the DOM dynamically. Additional Requests: The browser makes additional HTTP requests for resources like images, stylesheets, and scripts. Content Painting: The parsed and styled content is painted onto the screen. 8. Displaying the Page # Final Rendering: The browser continuously repaints the screen as new content is received and processed. User Interaction: The browser handles user interactions like clicks, scrolls, and form submissions, triggering further HTTP requests if needed. DOM Updates: JavaScript may continue to update the DOM, causing re-renders and further user interaction handling. Performance Optimization: The browser optimizes performance by managing resource loading priorities and minimizing reflows. Conclusion # From entering a URL to displaying a web page, the process involves multiple detailed steps, including DNS resolution, establishing connections, sending requests, server processing, and rendering content. Each step is crucial in ensuring that the web page is correctly fetched and displayed to the user. Understanding these steps helps demystify the complexities behind a simple web request.\n"},{"id":7,"href":"/docs/howtos/content/","title":"Content","section":"HowTos","content":" Ubi loqui # Mentem genus facietque salire tempus bracchia # Lorem markdownum partu paterno Achillem. Habent amne generosi aderant ad pellem nec erat sustinet merces columque haec et, dixit minus nutrit accipiam subibis subdidit. Temeraria servatum agros qui sed fulva facta. Primum ultima, dedit, suo quisque linguae medentes fixo: tum petis.\nRapit vocant si hunc siste adspice # Ora precari Patraeque Neptunia, dixit Danae Cithaeron armaque maxima in nati Coniugis templis fluidove. Effugit usus nec ingreditur agmen ac manus conlato. Nullis vagis nequiquam vultibus aliquos altera suum venis teneas fretum. Armos remotis hoc sine ferrea iuncta quam!\nLocus fuit caecis # Nefas discordemque domino montes numen tum humili nexilibusque exit, Iove. Quae miror esse, scelerisque Melaneus viribus. Miseri laurus. Hoc est proposita me ante aliquid, aura inponere candidioribus quidque accendit bella, sumpta. Intravit quam erat figentem hunc, motus de fontes parvo tempestate.\niscsi_virus = pitch(json_in_on(eupViral), northbridge_services_troubleshooting, personal( firmware_rw.trash_rw_crm.device(interactive_gopher_personal, software, -1), megabit, ergonomicsSoftware(cmyk_usb_panel, mips_whitelist_duplex, cpa))); if (5) { managementNetwork += dma - boolean; kilohertz_token = 2; honeypot_affiliate_ergonomics = fiber; } mouseNorthbridge = byte(nybble_xmp_modem.horse_subnet( analogThroughputService * graphicPoint, drop(daw_bit, dnsIntranet), gateway_ospf), repository.domain_key.mouse(serverData(fileNetwork, trim_duplex_file), cellTapeDirect, token_tooltip_mashup( ripcordingMashup))); module_it = honeypot_driver(client_cold_dvr(593902, ripping_frequency) + coreLog.joystick(componentUdpLink), windows_expansion_touchscreen); bashGigabit.external.reality(2, server_hardware_codec.flops.ebookSampling( ciscNavigationBacklink, table + cleanDriver), indexProtocolIsp); Placabilis coactis nega ingemuit ignoscat nimia non # Frontis turba. Oculi gravis est Delphice; inque praedaque sanguine manu non.\nif (ad_api) { zif += usb.tiffAvatarRate(subnet, digital_rt) + exploitDrive; gigaflops(2 - bluetooth, edi_asp_memory.gopher(queryCursor, laptop), panel_point_firmware); spyware_bash.statePopApplet = express_netbios_digital( insertion_troubleshooting.brouter(recordFolderUs), 65); } recursionCoreRay = -5; if (hub == non) { portBoxVirus = soundWeb(recursive_card(rwTechnologyLeopard), font_radcab, guidCmsScalable + reciprocalMatrixPim); left.bug = screenshot; } else { tooltipOpacity = raw_process_permalink(webcamFontUser, -1); executable_router += tape; } if (tft) { bandwidthWeb *= social_page; } else { regular += 611883; thumbnail /= system_lag_keyboard; } Caesorum illa tu sentit micat vestes papyriferi # Inde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"},{"id":8,"href":"/docs/golang/content/fmt/","title":"How to use golang fmt package?","section":"Content","content":" formatting verbs # %s vs %q? Answer: %s prints the string without enclosing it in quotes. %q prints the string enclosed in double quotes, %q can print string, byte slice, runes and int. %v vs %+v vs %#v? Answer: %v: Default format, prints the value as is. For structs, it prints only the field values. %+v: Detailed format, includes field names in structs. %#v: Go-syntax representation, includes type information and can be used to recreate the value in Go code. What to use to print slice, maps and structs(composite data types)? Answer: %v, %+v, and %#v is mostly used %p prints the pointer of the complex data types scan function for user input # Scan, Scanf and Scanln read from os.Stdin Fscan, Fscanf and Fscanln read from a specified io.Reader Sscan, Sscanf and Sscanln read from an argument string Most importantly, remember to pass pointer instead of the variable as it needs to be written to the same variable space, not the value itself. Also, remember to handle errors with fmt.Scan functions If we want to do an endless input, we can use the for loop and break the loop if there is any error with the fmt.Scan Difference between fmt.Scan, fmt.Scanf and fmt.Scanln? Answer: fmt.Scan: Reads space-separated values from standard input. Stops reading at the first whitespace. var a int var b string fmt.Scan(\u0026amp;a, \u0026amp;b) fmt.Printf(\u0026#34;a: %d, b: %s\\n\u0026#34;, a, b) fmt.Scanf: Reads input according to a format specifier. Allows more control over the input format. var a int var b string fmt.Scanf(\u0026#34;%d %s\u0026#34;, \u0026amp;a, \u0026amp;b) fmt.Printf(\u0026#34;a: %d, b: %s\\n\u0026#34;, a, b) fmt.Scanln Reads input until a newline is encountered. Useful for reading a whole line of text or multiple values until the newline. var b string fmt.Scanln(\u0026amp;b) "},{"id":9,"href":"/docs/howtos/content/hugosite/","title":"Quick tutorial on blog web with hugo and netlify","section":"Content","content":" How to Create a Blog with Hugo and Deploy on Netlify # Creating a blog with Hugo and deploying it on Netlify is a streamlined and efficient process. Hugo is a powerful static site generator that allows for quick and easy website development. Netlify provides seamless deployment and hosting for static sites. Here\u0026rsquo;s a step-by-step guide to get your blog up and running.\nPrerequisites # Install Hugo by following the installation guide. Start from the root folder of a github repo, such as yangblog Step 1: Create a New Hugo Site # Start by creating a new Hugo site:\nhugo new site yanglyublog --format yaml Step 2: Add a Theme # Choose a theme from the Hugo Themes site. For example, to add the Ananke theme:\ngit init git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke echo \u0026#39;theme = \u0026#34;ananke\u0026#34;\u0026#39; \u0026gt;\u0026gt; hugo.yaml Step 3: Create Content # Generate your first post:\nhugo new posts/my-first-post.md Edit the content of the post by opening the content/posts/my-first-post.md file in a text editor. Change the draft status to false. You can also just create any .md file under content/posts/ Step 4: Build the Site # To see your site locally, run:\nhugo server --minify --theme hugo-book Visit http://localhost:1313 in your browser to preview the site.\nStep 5: Prepare for Deployment # Update the hugo.yaml file, update as follows: baseURL: https://yanglyublog.netlify.app/ languageCode: en-us title: Yang\u0026#39;s Blog theme: hugo-book Push your Hugo site to your repository. Read this blog here to understand the steps needed. Step 6: Deploy to Netlify # Go to Netlify and sign up or log in. Click on “New site from Git” and select your repository.\nConfigure the build settings:\nBuild Command: hugo --gc --minify Publish Directory: public Set Env Var:\nHUGO_VERSION: 0.128.2 Click “Deploy site.” Netlify will build and deploy your site. Once the process is complete, you will have a live URL for your new blog.\nStep 7: Continuous Deployment # Every time you push changes to your GitHub repository, Netlify will automatically rebuild and deploy your site. This ensures your blog is always up-to-date with the latest changes.\nConclusion # Creating and deploying a blog with Hugo and Netlify is straightforward. Hugo\u0026rsquo;s speed and flexibility combined with Netlify\u0026rsquo;s ease of use for deployment make it a powerful combination for bloggers and developers alike.\nEnjoy your new blog!\n"},{"id":10,"href":"/docs/howtos/content/domain/","title":"Setting Up a New Domain for Your Netlify Website","section":"Content","content":" Setting Up a New Domain for Your Netlify Website # Setting up a custom domain for your Netlify website helps in branding and makes it easier for users to find your site. Here’s a step-by-step guide on how to set up a new domain for your Netlify website.\nStep 1: Purchase a Domain # First, you need to purchase a domain from a domain registrar. Some popular domain registrars include:\nNamecheap GoDaddy Google Domains Choose a domain name that reflects your brand or website’s purpose.\nStep 2: Add a Custom Domain in Netlify # Log in to Netlify: Go to Netlify and log in to your account. Select Your Site: From your Netlify dashboard, select the site you want to add a custom domain to. Go to Domain Settings: In the site dashboard, navigate to the \u0026ldquo;Domain settings\u0026rdquo; section under \u0026ldquo;Site settings.\u0026rdquo; Add Custom Domain: Click on the \u0026ldquo;Add custom domain\u0026rdquo; button and enter your purchased domain name. Step 3: Configure DNS Settings # Access DNS Settings in Netlify: After adding your custom domain, Netlify will provide you with DNS records that need to be added to your domain registrar. Log in to Your Domain Registrar: Log in to the account where you purchased your domain. Find DNS Settings: Navigate to the DNS settings or domain management section of your registrar. Add DNS Records: Add the DNS records provided by Netlify. These typically include an A record pointing to Netlify’s IP address and a CNAME record for www. Example DNS Records # A Record: Name: @ Value: 104.198.14.52 CNAME Record: Name: www Value: your-site.netlify.app Step 4: Verify DNS Configuration # Wait for Propagation: DNS changes can take some time to propagate (usually up to 48 hours, but often much quicker). Check Status: Return to the Netlify dashboard and check the status of your domain under the \u0026ldquo;Domain settings\u0026rdquo; section. Netlify will verify the DNS configuration. HTTPS Configuration: Once your DNS is configured correctly, Netlify will automatically provision an SSL certificate for your domain, enabling HTTPS. Step 5: Redirect Non-www to www (or vice versa) # Domain Aliases: In the \u0026ldquo;Domain settings,\u0026rdquo; you can set up domain aliases to ensure both www.yourdomain.com and yourdomain.com point to your site. Primary Domain: Choose your primary domain in the Netlify settings to redirect traffic from the non-primary domain to the primary one. Conclusion # Setting up a custom domain for your Netlify website enhances your brand\u0026rsquo;s credibility and makes your site more accessible to your audience. By following these steps, you can easily configure and manage your domain settings, ensuring your site is live and secure.\n"},{"id":11,"href":"/docs/golang/content/","title":"Content","section":"Golang","content":" Ubi loqui # Mentem genus facietque salire tempus bracchia # Lorem markdownum partu paterno Achillem. Habent amne generosi aderant ad pellem nec erat sustinet merces columque haec et, dixit minus nutrit accipiam subibis subdidit. Temeraria servatum agros qui sed fulva facta. Primum ultima, dedit, suo quisque linguae medentes fixo: tum petis.\nRapit vocant si hunc siste adspice # Ora precari Patraeque Neptunia, dixit Danae Cithaeron armaque maxima in nati Coniugis templis fluidove. Effugit usus nec ingreditur agmen ac manus conlato. Nullis vagis nequiquam vultibus aliquos altera suum venis teneas fretum. Armos remotis hoc sine ferrea iuncta quam!\nLocus fuit caecis # Nefas discordemque domino montes numen tum humili nexilibusque exit, Iove. Quae miror esse, scelerisque Melaneus viribus. Miseri laurus. Hoc est proposita me ante aliquid, aura inponere candidioribus quidque accendit bella, sumpta. Intravit quam erat figentem hunc, motus de fontes parvo tempestate.\niscsi_virus = pitch(json_in_on(eupViral), northbridge_services_troubleshooting, personal( firmware_rw.trash_rw_crm.device(interactive_gopher_personal, software, -1), megabit, ergonomicsSoftware(cmyk_usb_panel, mips_whitelist_duplex, cpa))); if (5) { managementNetwork += dma - boolean; kilohertz_token = 2; honeypot_affiliate_ergonomics = fiber; } mouseNorthbridge = byte(nybble_xmp_modem.horse_subnet( analogThroughputService * graphicPoint, drop(daw_bit, dnsIntranet), gateway_ospf), repository.domain_key.mouse(serverData(fileNetwork, trim_duplex_file), cellTapeDirect, token_tooltip_mashup( ripcordingMashup))); module_it = honeypot_driver(client_cold_dvr(593902, ripping_frequency) + coreLog.joystick(componentUdpLink), windows_expansion_touchscreen); bashGigabit.external.reality(2, server_hardware_codec.flops.ebookSampling( ciscNavigationBacklink, table + cleanDriver), indexProtocolIsp); Placabilis coactis nega ingemuit ignoscat nimia non # Frontis turba. Oculi gravis est Delphice; inque praedaque sanguine manu non.\nif (ad_api) { zif += usb.tiffAvatarRate(subnet, digital_rt) + exploitDrive; gigaflops(2 - bluetooth, edi_asp_memory.gopher(queryCursor, laptop), panel_point_firmware); spyware_bash.statePopApplet = express_netbios_digital( insertion_troubleshooting.brouter(recordFolderUs), 65); } recursionCoreRay = -5; if (hub == non) { portBoxVirus = soundWeb(recursive_card(rwTechnologyLeopard), font_radcab, guidCmsScalable + reciprocalMatrixPim); left.bug = screenshot; } else { tooltipOpacity = raw_process_permalink(webcamFontUser, -1); executable_router += tape; } if (tft) { bandwidthWeb *= social_page; } else { regular += 611883; thumbnail /= system_lag_keyboard; } Caesorum illa tu sentit micat vestes papyriferi # Inde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"},{"id":12,"href":"/docs/leetcode/contents/hashmap/","title":"Hashmap","section":"Contents","content":" Hashmap # "},{"id":13,"href":"/docs/leetcode/contents/hashmap/twosum/","title":"Twosum","section":"Hashmap","content":" two sum, 3 sum, 4 sums # Caesorum illa tu sentit micat vestes papyriferi # "},{"id":14,"href":"/docs/leetcode/contents/linkedlist/23mergeklists/","title":"23mergeklists","section":"Linkedlist","content":" leetcode 23: merge k sorted linked list # Caesorum illa tu sentit micat vestes papyriferi # "},{"id":15,"href":"/docs/leetcode/contents/linkedlist/","title":"Linkedlist","section":"Contents","content":" LinkedList # "},{"id":16,"href":"/posts/post1/","title":"Post1","section":"Blog","content":" 11th July # Caesorum illa tu sentit micat vestes papyriferi # "},{"id":17,"href":"/posts/post2/","title":"Post2","section":"Blog","content":" 10th July # Caesorum illa tu sentit micat vestes papyriferi # "},{"id":18,"href":"/posts/post3/","title":"Post3","section":"Blog","content":" 9th July # Caesorum illa tu sentit micat vestes papyriferi # "},{"id":19,"href":"/posts/","title":"Blog","section":"Introduction","content":"Here are some personal blogs to document my journey\n"}]