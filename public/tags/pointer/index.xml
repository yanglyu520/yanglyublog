<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pointer on Yang's Blog</title><link>http://localhost:1313/tags/pointer/</link><description>Recent content in Pointer on Yang's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 09 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/pointer/index.xml" rel="self" type="application/rss+xml"/><item><title>Difference between `new` and `make` in Golang</title><link>http://localhost:1313/docs/golang/basics/newvsmake/</link><pubDate>Tue, 09 Jul 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/docs/golang/basics/newvsmake/</guid><description>Difference between new and make in Golang # In Go, make and new are built-in functions used for memory allocation.
make not only allocates memory but also initializes the data, which is necessary because the data types supported by make (like slices, maps, and channels) require initialization before use. On the other hand, new allocates memory space that is filled with zero values. new allocates a single block of memory, while make may allocate multiple blocks of memory.</description></item></channel></rss>